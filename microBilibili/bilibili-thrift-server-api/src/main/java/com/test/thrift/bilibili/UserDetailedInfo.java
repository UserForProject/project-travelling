/**
 * Autogenerated by Thrift Compiler (0.13.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.test.thrift.bilibili;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.13.0)", date = "2020-07-23")
public class UserDetailedInfo implements org.apache.thrift.TBase<UserDetailedInfo, UserDetailedInfo._Fields>, java.io.Serializable, Cloneable, Comparable<UserDetailedInfo> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("UserDetailedInfo");

  private static final org.apache.thrift.protocol.TField NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("name", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField UID_FIELD_DESC = new org.apache.thrift.protocol.TField("uid", org.apache.thrift.protocol.TType.I32, (short)2);
  private static final org.apache.thrift.protocol.TField LEVEL_FIELD_DESC = new org.apache.thrift.protocol.TField("level", org.apache.thrift.protocol.TType.I32, (short)3);
  private static final org.apache.thrift.protocol.TField FOLLOWER_FIELD_DESC = new org.apache.thrift.protocol.TField("follower", org.apache.thrift.protocol.TType.I32, (short)4);
  private static final org.apache.thrift.protocol.TField FOLLOW_FIELD_DESC = new org.apache.thrift.protocol.TField("follow", org.apache.thrift.protocol.TType.I32, (short)5);
  private static final org.apache.thrift.protocol.TField LIKES_FIELD_DESC = new org.apache.thrift.protocol.TField("likes", org.apache.thrift.protocol.TType.I32, (short)6);
  private static final org.apache.thrift.protocol.TField PLAY_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("playAmount", org.apache.thrift.protocol.TType.I32, (short)7);
  private static final org.apache.thrift.protocol.TField READING_AMOUNT_FIELD_DESC = new org.apache.thrift.protocol.TField("readingAmount", org.apache.thrift.protocol.TType.I32, (short)8);
  private static final org.apache.thrift.protocol.TField VIDEOS_FIELD_DESC = new org.apache.thrift.protocol.TField("videos", org.apache.thrift.protocol.TType.MAP, (short)9);
  private static final org.apache.thrift.protocol.TField FACE_FIELD_DESC = new org.apache.thrift.protocol.TField("face", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField FANS_DATA_FIELD_DESC = new org.apache.thrift.protocol.TField("fansData", org.apache.thrift.protocol.TType.LIST, (short)11);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new UserDetailedInfoStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new UserDetailedInfoTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable java.lang.String name; // required
  public int uid; // required
  public int level; // required
  public int follower; // required
  public int follow; // required
  public int likes; // required
  public int playAmount; // required
  public int readingAmount; // required
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> videos; // required
  public @org.apache.thrift.annotation.Nullable java.lang.String face; // required
  public @org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> fansData; // required

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    NAME((short)1, "name"),
    UID((short)2, "uid"),
    LEVEL((short)3, "level"),
    FOLLOWER((short)4, "follower"),
    FOLLOW((short)5, "follow"),
    LIKES((short)6, "likes"),
    PLAY_AMOUNT((short)7, "playAmount"),
    READING_AMOUNT((short)8, "readingAmount"),
    VIDEOS((short)9, "videos"),
    FACE((short)10, "face"),
    FANS_DATA((short)11, "fansData");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // NAME
          return NAME;
        case 2: // UID
          return UID;
        case 3: // LEVEL
          return LEVEL;
        case 4: // FOLLOWER
          return FOLLOWER;
        case 5: // FOLLOW
          return FOLLOW;
        case 6: // LIKES
          return LIKES;
        case 7: // PLAY_AMOUNT
          return PLAY_AMOUNT;
        case 8: // READING_AMOUNT
          return READING_AMOUNT;
        case 9: // VIDEOS
          return VIDEOS;
        case 10: // FACE
          return FACE;
        case 11: // FANS_DATA
          return FANS_DATA;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final int __UID_ISSET_ID = 0;
  private static final int __LEVEL_ISSET_ID = 1;
  private static final int __FOLLOWER_ISSET_ID = 2;
  private static final int __FOLLOW_ISSET_ID = 3;
  private static final int __LIKES_ISSET_ID = 4;
  private static final int __PLAYAMOUNT_ISSET_ID = 5;
  private static final int __READINGAMOUNT_ISSET_ID = 6;
  private byte __isset_bitfield = 0;
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.NAME, new org.apache.thrift.meta_data.FieldMetaData("name", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.UID, new org.apache.thrift.meta_data.FieldMetaData("uid", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LEVEL, new org.apache.thrift.meta_data.FieldMetaData("level", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOLLOWER, new org.apache.thrift.meta_data.FieldMetaData("follower", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.FOLLOW, new org.apache.thrift.meta_data.FieldMetaData("follow", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.LIKES, new org.apache.thrift.meta_data.FieldMetaData("likes", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.PLAY_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("playAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.READING_AMOUNT, new org.apache.thrift.meta_data.FieldMetaData("readingAmount", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32)));
    tmpMap.put(_Fields.VIDEOS, new org.apache.thrift.meta_data.FieldMetaData("videos", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    tmpMap.put(_Fields.FACE, new org.apache.thrift.meta_data.FieldMetaData("face", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.FANS_DATA, new org.apache.thrift.meta_data.FieldMetaData("fansData", org.apache.thrift.TFieldRequirementType.DEFAULT, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.I32))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(UserDetailedInfo.class, metaDataMap);
  }

  public UserDetailedInfo() {
  }

  public UserDetailedInfo(
    java.lang.String name,
    int uid,
    int level,
    int follower,
    int follow,
    int likes,
    int playAmount,
    int readingAmount,
    java.util.Map<java.lang.String,java.lang.String> videos,
    java.lang.String face,
    java.util.List<java.lang.Integer> fansData)
  {
    this();
    this.name = name;
    this.uid = uid;
    setUidIsSet(true);
    this.level = level;
    setLevelIsSet(true);
    this.follower = follower;
    setFollowerIsSet(true);
    this.follow = follow;
    setFollowIsSet(true);
    this.likes = likes;
    setLikesIsSet(true);
    this.playAmount = playAmount;
    setPlayAmountIsSet(true);
    this.readingAmount = readingAmount;
    setReadingAmountIsSet(true);
    this.videos = videos;
    this.face = face;
    this.fansData = fansData;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public UserDetailedInfo(UserDetailedInfo other) {
    __isset_bitfield = other.__isset_bitfield;
    if (other.isSetName()) {
      this.name = other.name;
    }
    this.uid = other.uid;
    this.level = other.level;
    this.follower = other.follower;
    this.follow = other.follow;
    this.likes = other.likes;
    this.playAmount = other.playAmount;
    this.readingAmount = other.readingAmount;
    if (other.isSetVideos()) {
      java.util.Map<java.lang.String,java.lang.String> __this__videos = new java.util.HashMap<java.lang.String,java.lang.String>(other.videos);
      this.videos = __this__videos;
    }
    if (other.isSetFace()) {
      this.face = other.face;
    }
    if (other.isSetFansData()) {
      java.util.List<java.lang.Integer> __this__fansData = new java.util.ArrayList<java.lang.Integer>(other.fansData);
      this.fansData = __this__fansData;
    }
  }

  public UserDetailedInfo deepCopy() {
    return new UserDetailedInfo(this);
  }

  @Override
  public void clear() {
    this.name = null;
    setUidIsSet(false);
    this.uid = 0;
    setLevelIsSet(false);
    this.level = 0;
    setFollowerIsSet(false);
    this.follower = 0;
    setFollowIsSet(false);
    this.follow = 0;
    setLikesIsSet(false);
    this.likes = 0;
    setPlayAmountIsSet(false);
    this.playAmount = 0;
    setReadingAmountIsSet(false);
    this.readingAmount = 0;
    this.videos = null;
    this.face = null;
    this.fansData = null;
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getName() {
    return this.name;
  }

  public UserDetailedInfo setName(@org.apache.thrift.annotation.Nullable java.lang.String name) {
    this.name = name;
    return this;
  }

  public void unsetName() {
    this.name = null;
  }

  /** Returns true if field name is set (has been assigned a value) and false otherwise */
  public boolean isSetName() {
    return this.name != null;
  }

  public void setNameIsSet(boolean value) {
    if (!value) {
      this.name = null;
    }
  }

  public int getUid() {
    return this.uid;
  }

  public UserDetailedInfo setUid(int uid) {
    this.uid = uid;
    setUidIsSet(true);
    return this;
  }

  public void unsetUid() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __UID_ISSET_ID);
  }

  /** Returns true if field uid is set (has been assigned a value) and false otherwise */
  public boolean isSetUid() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __UID_ISSET_ID);
  }

  public void setUidIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __UID_ISSET_ID, value);
  }

  public int getLevel() {
    return this.level;
  }

  public UserDetailedInfo setLevel(int level) {
    this.level = level;
    setLevelIsSet(true);
    return this;
  }

  public void unsetLevel() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LEVEL_ISSET_ID);
  }

  /** Returns true if field level is set (has been assigned a value) and false otherwise */
  public boolean isSetLevel() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LEVEL_ISSET_ID);
  }

  public void setLevelIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LEVEL_ISSET_ID, value);
  }

  public int getFollower() {
    return this.follower;
  }

  public UserDetailedInfo setFollower(int follower) {
    this.follower = follower;
    setFollowerIsSet(true);
    return this;
  }

  public void unsetFollower() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FOLLOWER_ISSET_ID);
  }

  /** Returns true if field follower is set (has been assigned a value) and false otherwise */
  public boolean isSetFollower() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FOLLOWER_ISSET_ID);
  }

  public void setFollowerIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FOLLOWER_ISSET_ID, value);
  }

  public int getFollow() {
    return this.follow;
  }

  public UserDetailedInfo setFollow(int follow) {
    this.follow = follow;
    setFollowIsSet(true);
    return this;
  }

  public void unsetFollow() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __FOLLOW_ISSET_ID);
  }

  /** Returns true if field follow is set (has been assigned a value) and false otherwise */
  public boolean isSetFollow() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __FOLLOW_ISSET_ID);
  }

  public void setFollowIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __FOLLOW_ISSET_ID, value);
  }

  public int getLikes() {
    return this.likes;
  }

  public UserDetailedInfo setLikes(int likes) {
    this.likes = likes;
    setLikesIsSet(true);
    return this;
  }

  public void unsetLikes() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __LIKES_ISSET_ID);
  }

  /** Returns true if field likes is set (has been assigned a value) and false otherwise */
  public boolean isSetLikes() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __LIKES_ISSET_ID);
  }

  public void setLikesIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __LIKES_ISSET_ID, value);
  }

  public int getPlayAmount() {
    return this.playAmount;
  }

  public UserDetailedInfo setPlayAmount(int playAmount) {
    this.playAmount = playAmount;
    setPlayAmountIsSet(true);
    return this;
  }

  public void unsetPlayAmount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __PLAYAMOUNT_ISSET_ID);
  }

  /** Returns true if field playAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetPlayAmount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __PLAYAMOUNT_ISSET_ID);
  }

  public void setPlayAmountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __PLAYAMOUNT_ISSET_ID, value);
  }

  public int getReadingAmount() {
    return this.readingAmount;
  }

  public UserDetailedInfo setReadingAmount(int readingAmount) {
    this.readingAmount = readingAmount;
    setReadingAmountIsSet(true);
    return this;
  }

  public void unsetReadingAmount() {
    __isset_bitfield = org.apache.thrift.EncodingUtils.clearBit(__isset_bitfield, __READINGAMOUNT_ISSET_ID);
  }

  /** Returns true if field readingAmount is set (has been assigned a value) and false otherwise */
  public boolean isSetReadingAmount() {
    return org.apache.thrift.EncodingUtils.testBit(__isset_bitfield, __READINGAMOUNT_ISSET_ID);
  }

  public void setReadingAmountIsSet(boolean value) {
    __isset_bitfield = org.apache.thrift.EncodingUtils.setBit(__isset_bitfield, __READINGAMOUNT_ISSET_ID, value);
  }

  public int getVideosSize() {
    return (this.videos == null) ? 0 : this.videos.size();
  }

  public void putToVideos(java.lang.String key, java.lang.String val) {
    if (this.videos == null) {
      this.videos = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.videos.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getVideos() {
    return this.videos;
  }

  public UserDetailedInfo setVideos(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> videos) {
    this.videos = videos;
    return this;
  }

  public void unsetVideos() {
    this.videos = null;
  }

  /** Returns true if field videos is set (has been assigned a value) and false otherwise */
  public boolean isSetVideos() {
    return this.videos != null;
  }

  public void setVideosIsSet(boolean value) {
    if (!value) {
      this.videos = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.String getFace() {
    return this.face;
  }

  public UserDetailedInfo setFace(@org.apache.thrift.annotation.Nullable java.lang.String face) {
    this.face = face;
    return this;
  }

  public void unsetFace() {
    this.face = null;
  }

  /** Returns true if field face is set (has been assigned a value) and false otherwise */
  public boolean isSetFace() {
    return this.face != null;
  }

  public void setFaceIsSet(boolean value) {
    if (!value) {
      this.face = null;
    }
  }

  public int getFansDataSize() {
    return (this.fansData == null) ? 0 : this.fansData.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<java.lang.Integer> getFansDataIterator() {
    return (this.fansData == null) ? null : this.fansData.iterator();
  }

  public void addToFansData(int elem) {
    if (this.fansData == null) {
      this.fansData = new java.util.ArrayList<java.lang.Integer>();
    }
    this.fansData.add(elem);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.List<java.lang.Integer> getFansData() {
    return this.fansData;
  }

  public UserDetailedInfo setFansData(@org.apache.thrift.annotation.Nullable java.util.List<java.lang.Integer> fansData) {
    this.fansData = fansData;
    return this;
  }

  public void unsetFansData() {
    this.fansData = null;
  }

  /** Returns true if field fansData is set (has been assigned a value) and false otherwise */
  public boolean isSetFansData() {
    return this.fansData != null;
  }

  public void setFansDataIsSet(boolean value) {
    if (!value) {
      this.fansData = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case NAME:
      if (value == null) {
        unsetName();
      } else {
        setName((java.lang.String)value);
      }
      break;

    case UID:
      if (value == null) {
        unsetUid();
      } else {
        setUid((java.lang.Integer)value);
      }
      break;

    case LEVEL:
      if (value == null) {
        unsetLevel();
      } else {
        setLevel((java.lang.Integer)value);
      }
      break;

    case FOLLOWER:
      if (value == null) {
        unsetFollower();
      } else {
        setFollower((java.lang.Integer)value);
      }
      break;

    case FOLLOW:
      if (value == null) {
        unsetFollow();
      } else {
        setFollow((java.lang.Integer)value);
      }
      break;

    case LIKES:
      if (value == null) {
        unsetLikes();
      } else {
        setLikes((java.lang.Integer)value);
      }
      break;

    case PLAY_AMOUNT:
      if (value == null) {
        unsetPlayAmount();
      } else {
        setPlayAmount((java.lang.Integer)value);
      }
      break;

    case READING_AMOUNT:
      if (value == null) {
        unsetReadingAmount();
      } else {
        setReadingAmount((java.lang.Integer)value);
      }
      break;

    case VIDEOS:
      if (value == null) {
        unsetVideos();
      } else {
        setVideos((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    case FACE:
      if (value == null) {
        unsetFace();
      } else {
        setFace((java.lang.String)value);
      }
      break;

    case FANS_DATA:
      if (value == null) {
        unsetFansData();
      } else {
        setFansData((java.util.List<java.lang.Integer>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case NAME:
      return getName();

    case UID:
      return getUid();

    case LEVEL:
      return getLevel();

    case FOLLOWER:
      return getFollower();

    case FOLLOW:
      return getFollow();

    case LIKES:
      return getLikes();

    case PLAY_AMOUNT:
      return getPlayAmount();

    case READING_AMOUNT:
      return getReadingAmount();

    case VIDEOS:
      return getVideos();

    case FACE:
      return getFace();

    case FANS_DATA:
      return getFansData();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case NAME:
      return isSetName();
    case UID:
      return isSetUid();
    case LEVEL:
      return isSetLevel();
    case FOLLOWER:
      return isSetFollower();
    case FOLLOW:
      return isSetFollow();
    case LIKES:
      return isSetLikes();
    case PLAY_AMOUNT:
      return isSetPlayAmount();
    case READING_AMOUNT:
      return isSetReadingAmount();
    case VIDEOS:
      return isSetVideos();
    case FACE:
      return isSetFace();
    case FANS_DATA:
      return isSetFansData();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof UserDetailedInfo)
      return this.equals((UserDetailedInfo)that);
    return false;
  }

  public boolean equals(UserDetailedInfo that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_name = true && this.isSetName();
    boolean that_present_name = true && that.isSetName();
    if (this_present_name || that_present_name) {
      if (!(this_present_name && that_present_name))
        return false;
      if (!this.name.equals(that.name))
        return false;
    }

    boolean this_present_uid = true;
    boolean that_present_uid = true;
    if (this_present_uid || that_present_uid) {
      if (!(this_present_uid && that_present_uid))
        return false;
      if (this.uid != that.uid)
        return false;
    }

    boolean this_present_level = true;
    boolean that_present_level = true;
    if (this_present_level || that_present_level) {
      if (!(this_present_level && that_present_level))
        return false;
      if (this.level != that.level)
        return false;
    }

    boolean this_present_follower = true;
    boolean that_present_follower = true;
    if (this_present_follower || that_present_follower) {
      if (!(this_present_follower && that_present_follower))
        return false;
      if (this.follower != that.follower)
        return false;
    }

    boolean this_present_follow = true;
    boolean that_present_follow = true;
    if (this_present_follow || that_present_follow) {
      if (!(this_present_follow && that_present_follow))
        return false;
      if (this.follow != that.follow)
        return false;
    }

    boolean this_present_likes = true;
    boolean that_present_likes = true;
    if (this_present_likes || that_present_likes) {
      if (!(this_present_likes && that_present_likes))
        return false;
      if (this.likes != that.likes)
        return false;
    }

    boolean this_present_playAmount = true;
    boolean that_present_playAmount = true;
    if (this_present_playAmount || that_present_playAmount) {
      if (!(this_present_playAmount && that_present_playAmount))
        return false;
      if (this.playAmount != that.playAmount)
        return false;
    }

    boolean this_present_readingAmount = true;
    boolean that_present_readingAmount = true;
    if (this_present_readingAmount || that_present_readingAmount) {
      if (!(this_present_readingAmount && that_present_readingAmount))
        return false;
      if (this.readingAmount != that.readingAmount)
        return false;
    }

    boolean this_present_videos = true && this.isSetVideos();
    boolean that_present_videos = true && that.isSetVideos();
    if (this_present_videos || that_present_videos) {
      if (!(this_present_videos && that_present_videos))
        return false;
      if (!this.videos.equals(that.videos))
        return false;
    }

    boolean this_present_face = true && this.isSetFace();
    boolean that_present_face = true && that.isSetFace();
    if (this_present_face || that_present_face) {
      if (!(this_present_face && that_present_face))
        return false;
      if (!this.face.equals(that.face))
        return false;
    }

    boolean this_present_fansData = true && this.isSetFansData();
    boolean that_present_fansData = true && that.isSetFansData();
    if (this_present_fansData || that_present_fansData) {
      if (!(this_present_fansData && that_present_fansData))
        return false;
      if (!this.fansData.equals(that.fansData))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetName()) ? 131071 : 524287);
    if (isSetName())
      hashCode = hashCode * 8191 + name.hashCode();

    hashCode = hashCode * 8191 + uid;

    hashCode = hashCode * 8191 + level;

    hashCode = hashCode * 8191 + follower;

    hashCode = hashCode * 8191 + follow;

    hashCode = hashCode * 8191 + likes;

    hashCode = hashCode * 8191 + playAmount;

    hashCode = hashCode * 8191 + readingAmount;

    hashCode = hashCode * 8191 + ((isSetVideos()) ? 131071 : 524287);
    if (isSetVideos())
      hashCode = hashCode * 8191 + videos.hashCode();

    hashCode = hashCode * 8191 + ((isSetFace()) ? 131071 : 524287);
    if (isSetFace())
      hashCode = hashCode * 8191 + face.hashCode();

    hashCode = hashCode * 8191 + ((isSetFansData()) ? 131071 : 524287);
    if (isSetFansData())
      hashCode = hashCode * 8191 + fansData.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(UserDetailedInfo other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetName()).compareTo(other.isSetName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.name, other.name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetUid()).compareTo(other.isSetUid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetUid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.uid, other.uid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLevel()).compareTo(other.isSetLevel());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLevel()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.level, other.level);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFollower()).compareTo(other.isSetFollower());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFollower()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.follower, other.follower);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFollow()).compareTo(other.isSetFollow());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFollow()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.follow, other.follow);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetLikes()).compareTo(other.isSetLikes());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetLikes()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.likes, other.likes);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPlayAmount()).compareTo(other.isSetPlayAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPlayAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.playAmount, other.playAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetReadingAmount()).compareTo(other.isSetReadingAmount());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetReadingAmount()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.readingAmount, other.readingAmount);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetVideos()).compareTo(other.isSetVideos());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetVideos()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.videos, other.videos);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFace()).compareTo(other.isSetFace());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFace()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.face, other.face);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetFansData()).compareTo(other.isSetFansData());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFansData()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.fansData, other.fansData);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("UserDetailedInfo(");
    boolean first = true;

    sb.append("name:");
    if (this.name == null) {
      sb.append("null");
    } else {
      sb.append(this.name);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("uid:");
    sb.append(this.uid);
    first = false;
    if (!first) sb.append(", ");
    sb.append("level:");
    sb.append(this.level);
    first = false;
    if (!first) sb.append(", ");
    sb.append("follower:");
    sb.append(this.follower);
    first = false;
    if (!first) sb.append(", ");
    sb.append("follow:");
    sb.append(this.follow);
    first = false;
    if (!first) sb.append(", ");
    sb.append("likes:");
    sb.append(this.likes);
    first = false;
    if (!first) sb.append(", ");
    sb.append("playAmount:");
    sb.append(this.playAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("readingAmount:");
    sb.append(this.readingAmount);
    first = false;
    if (!first) sb.append(", ");
    sb.append("videos:");
    if (this.videos == null) {
      sb.append("null");
    } else {
      sb.append(this.videos);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("face:");
    if (this.face == null) {
      sb.append("null");
    } else {
      sb.append(this.face);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("fansData:");
    if (this.fansData == null) {
      sb.append("null");
    } else {
      sb.append(this.fansData);
    }
    first = false;
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      // it doesn't seem like you should have to do this, but java serialization is wacky, and doesn't call the default constructor.
      __isset_bitfield = 0;
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class UserDetailedInfoStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserDetailedInfoStandardScheme getScheme() {
      return new UserDetailedInfoStandardScheme();
    }
  }

  private static class UserDetailedInfoStandardScheme extends org.apache.thrift.scheme.StandardScheme<UserDetailedInfo> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, UserDetailedInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.name = iprot.readString();
              struct.setNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // UID
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.uid = iprot.readI32();
              struct.setUidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // LEVEL
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.level = iprot.readI32();
              struct.setLevelIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // FOLLOWER
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.follower = iprot.readI32();
              struct.setFollowerIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // FOLLOW
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.follow = iprot.readI32();
              struct.setFollowIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // LIKES
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.likes = iprot.readI32();
              struct.setLikesIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PLAY_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.playAmount = iprot.readI32();
              struct.setPlayAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // READING_AMOUNT
            if (schemeField.type == org.apache.thrift.protocol.TType.I32) {
              struct.readingAmount = iprot.readI32();
              struct.setReadingAmountIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // VIDEOS
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map0 = iprot.readMapBegin();
                struct.videos = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map0.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key1;
                @org.apache.thrift.annotation.Nullable java.lang.String _val2;
                for (int _i3 = 0; _i3 < _map0.size; ++_i3)
                {
                  _key1 = iprot.readString();
                  _val2 = iprot.readString();
                  struct.videos.put(_key1, _val2);
                }
                iprot.readMapEnd();
              }
              struct.setVideosIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // FACE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.face = iprot.readString();
              struct.setFaceIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // FANS_DATA
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list4 = iprot.readListBegin();
                struct.fansData = new java.util.ArrayList<java.lang.Integer>(_list4.size);
                int _elem5;
                for (int _i6 = 0; _i6 < _list4.size; ++_i6)
                {
                  _elem5 = iprot.readI32();
                  struct.fansData.add(_elem5);
                }
                iprot.readListEnd();
              }
              struct.setFansDataIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, UserDetailedInfo struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.name != null) {
        oprot.writeFieldBegin(NAME_FIELD_DESC);
        oprot.writeString(struct.name);
        oprot.writeFieldEnd();
      }
      oprot.writeFieldBegin(UID_FIELD_DESC);
      oprot.writeI32(struct.uid);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LEVEL_FIELD_DESC);
      oprot.writeI32(struct.level);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FOLLOWER_FIELD_DESC);
      oprot.writeI32(struct.follower);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(FOLLOW_FIELD_DESC);
      oprot.writeI32(struct.follow);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(LIKES_FIELD_DESC);
      oprot.writeI32(struct.likes);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(PLAY_AMOUNT_FIELD_DESC);
      oprot.writeI32(struct.playAmount);
      oprot.writeFieldEnd();
      oprot.writeFieldBegin(READING_AMOUNT_FIELD_DESC);
      oprot.writeI32(struct.readingAmount);
      oprot.writeFieldEnd();
      if (struct.videos != null) {
        oprot.writeFieldBegin(VIDEOS_FIELD_DESC);
        {
          oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.videos.size()));
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter7 : struct.videos.entrySet())
          {
            oprot.writeString(_iter7.getKey());
            oprot.writeString(_iter7.getValue());
          }
          oprot.writeMapEnd();
        }
        oprot.writeFieldEnd();
      }
      if (struct.face != null) {
        oprot.writeFieldBegin(FACE_FIELD_DESC);
        oprot.writeString(struct.face);
        oprot.writeFieldEnd();
      }
      if (struct.fansData != null) {
        oprot.writeFieldBegin(FANS_DATA_FIELD_DESC);
        {
          oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, struct.fansData.size()));
          for (int _iter8 : struct.fansData)
          {
            oprot.writeI32(_iter8);
          }
          oprot.writeListEnd();
        }
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class UserDetailedInfoTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public UserDetailedInfoTupleScheme getScheme() {
      return new UserDetailedInfoTupleScheme();
    }
  }

  private static class UserDetailedInfoTupleScheme extends org.apache.thrift.scheme.TupleScheme<UserDetailedInfo> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, UserDetailedInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetName()) {
        optionals.set(0);
      }
      if (struct.isSetUid()) {
        optionals.set(1);
      }
      if (struct.isSetLevel()) {
        optionals.set(2);
      }
      if (struct.isSetFollower()) {
        optionals.set(3);
      }
      if (struct.isSetFollow()) {
        optionals.set(4);
      }
      if (struct.isSetLikes()) {
        optionals.set(5);
      }
      if (struct.isSetPlayAmount()) {
        optionals.set(6);
      }
      if (struct.isSetReadingAmount()) {
        optionals.set(7);
      }
      if (struct.isSetVideos()) {
        optionals.set(8);
      }
      if (struct.isSetFace()) {
        optionals.set(9);
      }
      if (struct.isSetFansData()) {
        optionals.set(10);
      }
      oprot.writeBitSet(optionals, 11);
      if (struct.isSetName()) {
        oprot.writeString(struct.name);
      }
      if (struct.isSetUid()) {
        oprot.writeI32(struct.uid);
      }
      if (struct.isSetLevel()) {
        oprot.writeI32(struct.level);
      }
      if (struct.isSetFollower()) {
        oprot.writeI32(struct.follower);
      }
      if (struct.isSetFollow()) {
        oprot.writeI32(struct.follow);
      }
      if (struct.isSetLikes()) {
        oprot.writeI32(struct.likes);
      }
      if (struct.isSetPlayAmount()) {
        oprot.writeI32(struct.playAmount);
      }
      if (struct.isSetReadingAmount()) {
        oprot.writeI32(struct.readingAmount);
      }
      if (struct.isSetVideos()) {
        {
          oprot.writeI32(struct.videos.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter9 : struct.videos.entrySet())
          {
            oprot.writeString(_iter9.getKey());
            oprot.writeString(_iter9.getValue());
          }
        }
      }
      if (struct.isSetFace()) {
        oprot.writeString(struct.face);
      }
      if (struct.isSetFansData()) {
        {
          oprot.writeI32(struct.fansData.size());
          for (int _iter10 : struct.fansData)
          {
            oprot.writeI32(_iter10);
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, UserDetailedInfo struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(11);
      if (incoming.get(0)) {
        struct.name = iprot.readString();
        struct.setNameIsSet(true);
      }
      if (incoming.get(1)) {
        struct.uid = iprot.readI32();
        struct.setUidIsSet(true);
      }
      if (incoming.get(2)) {
        struct.level = iprot.readI32();
        struct.setLevelIsSet(true);
      }
      if (incoming.get(3)) {
        struct.follower = iprot.readI32();
        struct.setFollowerIsSet(true);
      }
      if (incoming.get(4)) {
        struct.follow = iprot.readI32();
        struct.setFollowIsSet(true);
      }
      if (incoming.get(5)) {
        struct.likes = iprot.readI32();
        struct.setLikesIsSet(true);
      }
      if (incoming.get(6)) {
        struct.playAmount = iprot.readI32();
        struct.setPlayAmountIsSet(true);
      }
      if (incoming.get(7)) {
        struct.readingAmount = iprot.readI32();
        struct.setReadingAmountIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TMap _map11 = new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, iprot.readI32());
          struct.videos = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map11.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key12;
          @org.apache.thrift.annotation.Nullable java.lang.String _val13;
          for (int _i14 = 0; _i14 < _map11.size; ++_i14)
          {
            _key12 = iprot.readString();
            _val13 = iprot.readString();
            struct.videos.put(_key12, _val13);
          }
        }
        struct.setVideosIsSet(true);
      }
      if (incoming.get(9)) {
        struct.face = iprot.readString();
        struct.setFaceIsSet(true);
      }
      if (incoming.get(10)) {
        {
          org.apache.thrift.protocol.TList _list15 = new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.I32, iprot.readI32());
          struct.fansData = new java.util.ArrayList<java.lang.Integer>(_list15.size);
          int _elem16;
          for (int _i17 = 0; _i17 < _list15.size; ++_i17)
          {
            _elem16 = iprot.readI32();
            struct.fansData.add(_elem16);
          }
        }
        struct.setFansDataIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

